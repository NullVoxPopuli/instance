{"name":"Instance","tagline":"Slick Object State API","body":"# Instance\r\n\r\n## What Is It?\r\n\r\nInstance is a *convenient* and *safe* API for accessing and manipulating\r\nan object's state.\r\n\r\n## How Does It Work\r\n\r\nInstance adds a method to all objects called `#instance`. It returns\r\nan `Instance` delegator that provides the full interface to the\r\nobject's state.\r\n\r\nOf course, without implementing this in C, directly in the Ruby source,\r\nwe  are left to depend on the current provisions Ruby has for accessing\r\nthe state of an object. So there are some limitations here. However,\r\nwe implement the Ruby code in such a way as to minimize the downsides\r\nby caching all the method definitions the Instance class will utilize.\r\n\r\n## Usage\r\n\r\nLet's use a very simple example class with which to demonstrate usage.\r\n\r\n```ruby\r\n    class Song\r\n      attr_accessor :title\r\n      attr_accessor :artist\r\n      attr_accessor :year\r\n\r\n      def initialize(title, artist, year)\r\n        @title  = title\r\n        @artist = artist\r\n        @year   = year\r\n      end\r\n    end\r\n```\r\n\r\nNow we can create an instance of Song and work with it's state.\r\n\r\n```ruby\r\n    song = Song.new(\"Paranoid\", \"Black Sabbath\", 1970)\r\n\r\n    song.instance.variables\r\n    # => [:@title, :@artist, :@year]\r\n\r\n    song.instance.get(:title)\r\n    # => \"Parinoid\"\r\n\r\n    song.instance[:artist]\r\n    # => \"Black Sabbath\"\r\n\r\n    song.instance.to_h        \r\n    # => {:name => \"Paranoid\", :author => \"Black Sabbath\", :year => 1970)\r\n```\r\n\r\nFor a more complete set of usage examples see the QED documentation.\r\n\r\n\r\n## Copyrights\r\n\r\nCopyright &copy; 2014 [Rubyworks](http://rubyworks.github.io)\r\n\r\nBSD-2-Clause License\r\n\r\nSee [LICENSE.txt](LICENSE.txt) file for license details.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}